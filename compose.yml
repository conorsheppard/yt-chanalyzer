services:
  spring-boot-chanalyzer:
    image: "conorsheppard/spring-boot-chanalyzer"
    container_name: spring-boot-chanalyzer
    ports:
      - "8080:8080"
    environment:
      - SCRAPER_URL_LOCAL=http://playwright-java-scraper-chanalyzer:5050/api/v1/channels
      - SPRING.PROFILES.ACTIVE=default
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/videosdb
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=root
    depends_on:
      - postgres
      - playwright-java-scraper-chanalyzer
    links:
      - playwright-java-scraper-chanalyzer
    build:
      context: ./spring-boot-chanalyzer
      dockerfile: docker-compose/Dockerfile.local.optimized

  react-chanalyzer:
    image: "conorsheppard/react-chanalyzer"
    container_name: react-chanalyzer
    ports:
      - "3000:3000"
    links:
      - spring-boot-chanalyzer
    build:
      context: ./react-chanalyzer
      dockerfile: docker-compose/Dockerfile.node-optimized

  playwright-java-scraper-chanalyzer:
    image: "conorsheppard/playwright-java-scraper-chanalyzer"
    container_name: playwright-java-scraper-chanalyzer
    ports:
      - "5050:5050"
    build:
      context: ./playwright-java-scraper-chanalyzer
      dockerfile: docker-compose/Dockerfile.local

  postgres:
    image: postgres:17
    container_name: postgres-chanalyzer
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: videosdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: root
    volumes:
      - pgdata:/var/lib/postgresql/data

volumes:
  pgdata:
